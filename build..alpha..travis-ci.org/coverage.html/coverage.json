{"/home/travis/build/npmtest/node-npmtest-ref/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ref/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_ref */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-ref/lib.npmtest_ref.js":{"path":"/home/travis/build/npmtest/node-npmtest-ref/lib.npmtest_ref.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":48}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":54}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_ref */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_ref = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_ref = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-ref/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-ref/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":47}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":61},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-ref && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_ref */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_ref","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_ref.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_ref.rollup.js'] =","            local.assetsDict['/assets.npmtest_ref.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_ref.__dirname +","                    '/lib.npmtest_ref.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-ref/node_modules/ref/lib/ref.js":{"path":"/home/travis/build/npmtest/node-npmtest-ref/node_modules/ref/lib/ref.js","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":5,"22":5,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":5,"42":0,"43":5,"44":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":1,"71":1,"72":1,"73":1,"74":0,"75":1,"76":1,"77":1,"78":0,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":0,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":1,"135":1,"136":1,"137":1,"138":1,"139":0,"140":0,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":0,"148":0,"149":0,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":0,"158":0,"159":0,"160":0,"161":1,"162":1,"163":0,"164":0,"165":0,"166":0,"167":1,"168":1,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":1,"186":0,"187":0,"188":1,"189":0,"190":0,"191":1,"192":0,"193":0,"194":1,"195":0,"196":0,"197":1,"198":0,"199":0,"200":1,"201":0,"202":0,"203":1,"204":0,"205":0,"206":1,"207":0,"208":0,"209":1,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":1,"220":1,"221":0,"222":0,"223":0,"224":0,"225":1,"226":13,"227":13,"228":13,"229":13,"230":13,"231":8,"232":13,"233":13,"234":13,"235":1,"236":24,"237":1,"238":23,"239":23,"240":1,"241":1,"242":0,"243":1,"244":1,"245":0,"246":0,"247":0,"248":1,"249":26,"250":1,"251":1,"252":1,"253":1,"254":0,"255":1,"256":0,"257":1,"258":0,"259":1,"260":0,"261":1,"262":0,"263":1,"264":0,"265":1,"266":0,"267":1,"268":0,"269":1,"270":0,"271":1,"272":0,"273":1,"274":0,"275":1,"276":0,"277":1,"278":0,"279":1,"280":0,"281":1,"282":0,"283":1,"284":0,"285":1,"286":0,"287":1,"288":0,"289":1,"290":0,"291":1,"292":0,"293":1,"294":0,"295":1,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":1,"322":1,"323":0,"324":1,"325":0,"326":0},"b":{"1":[2,0],"2":[0,0],"3":[0,0],"4":[0,5],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,5],"12":[5,5,5],"13":[0,1],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[1,0],"19":[1,0],"20":[0,1],"21":[0,1],"22":[1,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[1,0],"28":[1,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[13,12,11,10],"59":[13,13],"60":[8,5],"61":[1,23],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,1],"66":[0,1]},"f":{"1":2,"2":0,"3":5,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":13,"52":24,"53":1,"54":0,"55":1,"56":0,"57":26,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0},"fnMap":{"1":{"name":"refType","line":304,"loc":{"start":{"line":304,"column":18},"end":{"line":304,"column":42}}},"2":{"name":"derefType","line":327,"loc":{"start":{"line":327,"column":20},"end":{"line":327,"column":46}}},"3":{"name":"coerceType","line":365,"loc":{"start":{"line":365,"column":21},"end":{"line":365,"column":48}}},"4":{"name":"(anonymous_4)","line":380,"loc":{"start":{"line":380,"column":31},"end":{"line":380,"column":43}}},"5":{"name":"getType","line":410,"loc":{"start":{"line":410,"column":18},"end":{"line":410,"column":44}}},"6":{"name":"get","line":416,"loc":{"start":{"line":416,"column":22},"end":{"line":416,"column":38}}},"7":{"name":"set","line":419,"loc":{"start":{"line":419,"column":22},"end":{"line":419,"column":38}}},"8":{"name":"get","line":439,"loc":{"start":{"line":439,"column":14},"end":{"line":439,"column":50}}},"9":{"name":"set","line":475,"loc":{"start":{"line":475,"column":14},"end":{"line":475,"column":57}}},"10":{"name":"alloc","line":508,"loc":{"start":{"line":508,"column":16},"end":{"line":508,"column":46}}},"11":{"name":"allocCString","line":543,"loc":{"start":{"line":543,"column":23},"end":{"line":543,"column":64}}},"12":{"name":"writeCString","line":567,"loc":{"start":{"line":567,"column":23},"end":{"line":567,"column":80}}},"13":{"name":"(anonymous_13)","line":590,"loc":{"start":{"line":590,"column":34},"end":{"line":590,"column":60}}},"14":{"name":"(anonymous_14)","line":596,"loc":{"start":{"line":596,"column":35},"end":{"line":596,"column":61}}},"15":{"name":"(anonymous_15)","line":602,"loc":{"start":{"line":602,"column":35},"end":{"line":602,"column":68}}},"16":{"name":"(anonymous_16)","line":608,"loc":{"start":{"line":608,"column":36},"end":{"line":608,"column":69}}},"17":{"name":"ref","line":630,"loc":{"start":{"line":630,"column":14},"end":{"line":630,"column":36}}},"18":{"name":"deref","line":658,"loc":{"start":{"line":658,"column":16},"end":{"line":658,"column":40}}},"19":{"name":"_attach","line":672,"loc":{"start":{"line":672,"column":18},"end":{"line":672,"column":46}}},"20":{"name":"writeObject","line":709,"loc":{"start":{"line":709,"column":22},"end":{"line":709,"column":74}}},"21":{"name":"writePointer","line":745,"loc":{"start":{"line":745,"column":23},"end":{"line":745,"column":64}}},"22":{"name":"reinterpret","line":778,"loc":{"start":{"line":778,"column":22},"end":{"line":778,"column":66}}},"23":{"name":"reinterpretUntilZeros","line":822,"loc":{"start":{"line":822,"column":32},"end":{"line":822,"column":86}}},"24":{"name":"get","line":842,"loc":{"start":{"line":842,"column":9},"end":{"line":842,"column":36}}},"25":{"name":"set","line":846,"loc":{"start":{"line":846,"column":9},"end":{"line":846,"column":41}}},"26":{"name":"get","line":858,"loc":{"start":{"line":858,"column":9},"end":{"line":858,"column":36}}},"27":{"name":"set","line":861,"loc":{"start":{"line":861,"column":9},"end":{"line":861,"column":41}}},"28":{"name":"get","line":876,"loc":{"start":{"line":876,"column":9},"end":{"line":876,"column":36}}},"29":{"name":"set","line":879,"loc":{"start":{"line":879,"column":9},"end":{"line":879,"column":41}}},"30":{"name":"get","line":894,"loc":{"start":{"line":894,"column":9},"end":{"line":894,"column":36}}},"31":{"name":"set","line":897,"loc":{"start":{"line":897,"column":9},"end":{"line":897,"column":41}}},"32":{"name":"get","line":909,"loc":{"start":{"line":909,"column":9},"end":{"line":909,"column":36}}},"33":{"name":"set","line":912,"loc":{"start":{"line":912,"column":9},"end":{"line":912,"column":41}}},"34":{"name":"get","line":924,"loc":{"start":{"line":924,"column":9},"end":{"line":924,"column":36}}},"35":{"name":"set","line":927,"loc":{"start":{"line":927,"column":9},"end":{"line":927,"column":41}}},"36":{"name":"get","line":939,"loc":{"start":{"line":939,"column":9},"end":{"line":939,"column":36}}},"37":{"name":"set","line":942,"loc":{"start":{"line":942,"column":9},"end":{"line":942,"column":41}}},"38":{"name":"get","line":954,"loc":{"start":{"line":954,"column":9},"end":{"line":954,"column":36}}},"39":{"name":"set","line":957,"loc":{"start":{"line":957,"column":9},"end":{"line":957,"column":41}}},"40":{"name":"get","line":969,"loc":{"start":{"line":969,"column":9},"end":{"line":969,"column":36}}},"41":{"name":"set","line":972,"loc":{"start":{"line":972,"column":9},"end":{"line":972,"column":41}}},"42":{"name":"get","line":984,"loc":{"start":{"line":984,"column":9},"end":{"line":984,"column":36}}},"43":{"name":"set","line":987,"loc":{"start":{"line":987,"column":9},"end":{"line":987,"column":41}}},"44":{"name":"get","line":999,"loc":{"start":{"line":999,"column":9},"end":{"line":999,"column":36}}},"45":{"name":"set","line":1002,"loc":{"start":{"line":1002,"column":9},"end":{"line":1002,"column":41}}},"46":{"name":"get","line":1015,"loc":{"start":{"line":1015,"column":9},"end":{"line":1015,"column":36}}},"47":{"name":"set","line":1018,"loc":{"start":{"line":1018,"column":9},"end":{"line":1018,"column":41}}},"48":{"name":"get","line":1036,"loc":{"start":{"line":1036,"column":9},"end":{"line":1036,"column":36}}},"49":{"name":"set","line":1043,"loc":{"start":{"line":1043,"column":9},"end":{"line":1043,"column":41}}},"50":{"name":"(anonymous_50)","line":1060,"loc":{"start":{"line":1060,"column":9},"end":{"line":1060,"column":21}}},"51":{"name":"(anonymous_51)","line":1153,"loc":{"start":{"line":1153,"column":55},"end":{"line":1153,"column":71}}},"52":{"name":"(anonymous_52)","line":1170,"loc":{"start":{"line":1170,"column":37},"end":{"line":1170,"column":53}}},"53":{"name":"(anonymous_53)","line":1177,"loc":{"start":{"line":1177,"column":26},"end":{"line":1177,"column":42}}},"54":{"name":"get","line":1178,"loc":{"start":{"line":1178,"column":9},"end":{"line":1178,"column":36}}},"55":{"name":"(anonymous_55)","line":1182,"loc":{"start":{"line":1182,"column":26},"end":{"line":1182,"column":42}}},"56":{"name":"set","line":1183,"loc":{"start":{"line":1183,"column":9},"end":{"line":1183,"column":41}}},"57":{"name":"(anonymous_57)","line":1195,"loc":{"start":{"line":1195,"column":35},"end":{"line":1195,"column":51}}},"58":{"name":"address","line":1231,"loc":{"start":{"line":1231,"column":27},"end":{"line":1231,"column":47}}},"59":{"name":"hexAddress","line":1239,"loc":{"start":{"line":1239,"column":30},"end":{"line":1239,"column":53}}},"60":{"name":"isNull","line":1247,"loc":{"start":{"line":1247,"column":26},"end":{"line":1247,"column":45}}},"61":{"name":"ref","line":1255,"loc":{"start":{"line":1255,"column":23},"end":{"line":1255,"column":39}}},"62":{"name":"deref","line":1263,"loc":{"start":{"line":1263,"column":25},"end":{"line":1263,"column":43}}},"63":{"name":"readObject","line":1271,"loc":{"start":{"line":1271,"column":30},"end":{"line":1271,"column":59}}},"64":{"name":"writeObject","line":1279,"loc":{"start":{"line":1279,"column":31},"end":{"line":1279,"column":66}}},"65":{"name":"readPointer","line":1287,"loc":{"start":{"line":1287,"column":31},"end":{"line":1287,"column":67}}},"66":{"name":"writePointer","line":1295,"loc":{"start":{"line":1295,"column":32},"end":{"line":1295,"column":68}}},"67":{"name":"readCString","line":1303,"loc":{"start":{"line":1303,"column":31},"end":{"line":1303,"column":61}}},"68":{"name":"writeCString","line":1311,"loc":{"start":{"line":1311,"column":32},"end":{"line":1311,"column":81}}},"69":{"name":"readInt64BE","line":1319,"loc":{"start":{"line":1319,"column":31},"end":{"line":1319,"column":61}}},"70":{"name":"writeInt64BE","line":1327,"loc":{"start":{"line":1327,"column":32},"end":{"line":1327,"column":68}}},"71":{"name":"readUInt64BE","line":1335,"loc":{"start":{"line":1335,"column":32},"end":{"line":1335,"column":63}}},"72":{"name":"writeUInt64BE","line":1343,"loc":{"start":{"line":1343,"column":33},"end":{"line":1343,"column":70}}},"73":{"name":"readInt64LE","line":1351,"loc":{"start":{"line":1351,"column":31},"end":{"line":1351,"column":61}}},"74":{"name":"writeInt64LE","line":1359,"loc":{"start":{"line":1359,"column":32},"end":{"line":1359,"column":68}}},"75":{"name":"readUInt64LE","line":1367,"loc":{"start":{"line":1367,"column":32},"end":{"line":1367,"column":63}}},"76":{"name":"writeUInt64LE","line":1375,"loc":{"start":{"line":1375,"column":33},"end":{"line":1375,"column":70}}},"77":{"name":"reinterpret","line":1383,"loc":{"start":{"line":1383,"column":31},"end":{"line":1383,"column":67}}},"78":{"name":"reinterpretUntilZeros","line":1391,"loc":{"start":{"line":1391,"column":41},"end":{"line":1391,"column":87}}},"79":{"name":"overwriteInspect","line":1452,"loc":{"start":{"line":1452,"column":0},"end":{"line":1452,"column":36}}},"80":{"name":"refinspect","line":1456,"loc":{"start":{"line":1456,"column":11},"end":{"line":1456,"column":34}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":57}},"4":{"start":{"line":304,"column":0},"end":{"line":317,"column":1}},"5":{"start":{"line":305,"column":2},"end":{"line":305,"column":38}},"6":{"start":{"line":306,"column":2},"end":{"line":306,"column":32}},"7":{"start":{"line":307,"column":2},"end":{"line":307,"column":19}},"8":{"start":{"line":308,"column":2},"end":{"line":315,"column":3}},"9":{"start":{"line":309,"column":4},"end":{"line":314,"column":6}},"10":{"start":{"line":316,"column":2},"end":{"line":316,"column":12}},"11":{"start":{"line":327,"column":0},"end":{"line":339,"column":1}},"12":{"start":{"line":328,"column":2},"end":{"line":328,"column":38}},"13":{"start":{"line":329,"column":2},"end":{"line":331,"column":3}},"14":{"start":{"line":330,"column":4},"end":{"line":330,"column":78}},"15":{"start":{"line":332,"column":2},"end":{"line":332,"column":40}},"16":{"start":{"line":333,"column":2},"end":{"line":337,"column":3}},"17":{"start":{"line":335,"column":4},"end":{"line":335,"column":30}},"18":{"start":{"line":336,"column":4},"end":{"line":336,"column":21}},"19":{"start":{"line":338,"column":2},"end":{"line":338,"column":12}},"20":{"start":{"line":365,"column":0},"end":{"line":400,"column":1}},"21":{"start":{"line":366,"column":2},"end":{"line":366,"column":16}},"22":{"start":{"line":367,"column":2},"end":{"line":395,"column":3}},"23":{"start":{"line":368,"column":4},"end":{"line":368,"column":29}},"24":{"start":{"line":369,"column":4},"end":{"line":369,"column":23}},"25":{"start":{"line":369,"column":13},"end":{"line":369,"column":23}},"26":{"start":{"line":372,"column":4},"end":{"line":372,"column":48}},"27":{"start":{"line":373,"column":4},"end":{"line":394,"column":5}},"28":{"start":{"line":375,"column":6},"end":{"line":375,"column":47}},"29":{"start":{"line":376,"column":11},"end":{"line":394,"column":5}},"30":{"start":{"line":377,"column":6},"end":{"line":377,"column":33}},"31":{"start":{"line":379,"column":6},"end":{"line":379,"column":22}},"32":{"start":{"line":380,"column":6},"end":{"line":383,"column":8}},"33":{"start":{"line":381,"column":8},"end":{"line":381,"column":18}},"34":{"start":{"line":382,"column":8},"end":{"line":382,"column":17}},"35":{"start":{"line":385,"column":6},"end":{"line":385,"column":30}},"36":{"start":{"line":386,"column":6},"end":{"line":393,"column":7}},"37":{"start":{"line":387,"column":8},"end":{"line":389,"column":9}},"38":{"start":{"line":388,"column":10},"end":{"line":388,"column":98}},"39":{"start":{"line":390,"column":8},"end":{"line":392,"column":9}},"40":{"start":{"line":391,"column":10},"end":{"line":391,"column":36}},"41":{"start":{"line":396,"column":2},"end":{"line":398,"column":3}},"42":{"start":{"line":397,"column":4},"end":{"line":397,"column":92}},"43":{"start":{"line":399,"column":2},"end":{"line":399,"column":12}},"44":{"start":{"line":410,"column":0},"end":{"line":424,"column":1}},"45":{"start":{"line":411,"column":2},"end":{"line":422,"column":3}},"46":{"start":{"line":412,"column":4},"end":{"line":412,"column":76}},"47":{"start":{"line":413,"column":4},"end":{"line":413,"column":20}},"48":{"start":{"line":414,"column":4},"end":{"line":414,"column":36}},"49":{"start":{"line":415,"column":4},"end":{"line":415,"column":31}},"50":{"start":{"line":416,"column":4},"end":{"line":418,"column":5}},"51":{"start":{"line":417,"column":6},"end":{"line":417,"column":53}},"52":{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},"53":{"start":{"line":420,"column":6},"end":{"line":420,"column":53}},"54":{"start":{"line":423,"column":2},"end":{"line":423,"column":40}},"55":{"start":{"line":439,"column":0},"end":{"line":460,"column":1}},"56":{"start":{"line":440,"column":2},"end":{"line":442,"column":3}},"57":{"start":{"line":441,"column":4},"end":{"line":441,"column":14}},"58":{"start":{"line":443,"column":2},"end":{"line":447,"column":3}},"59":{"start":{"line":444,"column":4},"end":{"line":444,"column":35}},"60":{"start":{"line":446,"column":4},"end":{"line":446,"column":34}},"61":{"start":{"line":448,"column":2},"end":{"line":448,"column":46}},"62":{"start":{"line":449,"column":2},"end":{"line":449,"column":72}},"63":{"start":{"line":450,"column":2},"end":{"line":459,"column":3}},"64":{"start":{"line":452,"column":4},"end":{"line":452,"column":35}},"65":{"start":{"line":455,"column":4},"end":{"line":455,"column":74}},"66":{"start":{"line":456,"column":4},"end":{"line":456,"column":61}},"67":{"start":{"line":457,"column":4},"end":{"line":457,"column":44}},"68":{"start":{"line":458,"column":4},"end":{"line":458,"column":20}},"69":{"start":{"line":475,"column":0},"end":{"line":491,"column":1}},"70":{"start":{"line":476,"column":2},"end":{"line":478,"column":3}},"71":{"start":{"line":477,"column":4},"end":{"line":477,"column":14}},"72":{"start":{"line":479,"column":2},"end":{"line":483,"column":3}},"73":{"start":{"line":480,"column":4},"end":{"line":480,"column":35}},"74":{"start":{"line":482,"column":4},"end":{"line":482,"column":34}},"75":{"start":{"line":484,"column":2},"end":{"line":484,"column":53}},"76":{"start":{"line":485,"column":2},"end":{"line":485,"column":73}},"77":{"start":{"line":486,"column":2},"end":{"line":490,"column":3}},"78":{"start":{"line":487,"column":4},"end":{"line":487,"column":35}},"79":{"start":{"line":489,"column":4},"end":{"line":489,"column":47}},"80":{"start":{"line":508,"column":0},"end":{"line":524,"column":1}},"81":{"start":{"line":509,"column":2},"end":{"line":509,"column":38}},"82":{"start":{"line":510,"column":2},"end":{"line":510,"column":60}},"83":{"start":{"line":511,"column":2},"end":{"line":511,"column":10}},"84":{"start":{"line":512,"column":2},"end":{"line":516,"column":3}},"85":{"start":{"line":513,"column":4},"end":{"line":513,"column":20}},"86":{"start":{"line":515,"column":4},"end":{"line":515,"column":33}},"87":{"start":{"line":517,"column":2},"end":{"line":517,"column":31}},"88":{"start":{"line":518,"column":2},"end":{"line":518,"column":20}},"89":{"start":{"line":519,"column":2},"end":{"line":522,"column":3}},"90":{"start":{"line":520,"column":4},"end":{"line":520,"column":53}},"91":{"start":{"line":521,"column":4},"end":{"line":521,"column":39}},"92":{"start":{"line":523,"column":2},"end":{"line":523,"column":15}},"93":{"start":{"line":543,"column":0},"end":{"line":552,"column":1}},"94":{"start":{"line":544,"column":2},"end":{"line":546,"column":3}},"95":{"start":{"line":545,"column":4},"end":{"line":545,"column":23}},"96":{"start":{"line":547,"column":2},"end":{"line":547,"column":52}},"97":{"start":{"line":548,"column":2},"end":{"line":548,"column":31}},"98":{"start":{"line":549,"column":2},"end":{"line":549,"column":51}},"99":{"start":{"line":550,"column":2},"end":{"line":550,"column":27}},"100":{"start":{"line":551,"column":2},"end":{"line":551,"column":15}},"101":{"start":{"line":567,"column":0},"end":{"line":579,"column":1}},"102":{"start":{"line":568,"column":2},"end":{"line":568,"column":76}},"103":{"start":{"line":569,"column":2},"end":{"line":569,"column":84}},"104":{"start":{"line":570,"column":2},"end":{"line":572,"column":3}},"105":{"start":{"line":571,"column":4},"end":{"line":571,"column":14}},"106":{"start":{"line":573,"column":2},"end":{"line":575,"column":3}},"107":{"start":{"line":574,"column":4},"end":{"line":574,"column":21}},"108":{"start":{"line":576,"column":2},"end":{"line":576,"column":35}},"109":{"start":{"line":577,"column":2},"end":{"line":577,"column":56}},"110":{"start":{"line":578,"column":2},"end":{"line":578,"column":36}},"111":{"start":{"line":581,"column":0},"end":{"line":581,"column":61}},"112":{"start":{"line":582,"column":0},"end":{"line":582,"column":63}},"113":{"start":{"line":583,"column":0},"end":{"line":583,"column":63}},"114":{"start":{"line":584,"column":0},"end":{"line":584,"column":65}},"115":{"start":{"line":586,"column":0},"end":{"line":586,"column":55}},"116":{"start":{"line":587,"column":0},"end":{"line":587,"column":48}},"117":{"start":{"line":588,"column":0},"end":{"line":588,"column":50}},"118":{"start":{"line":590,"column":0},"end":{"line":595,"column":1}},"119":{"start":{"line":591,"column":2},"end":{"line":593,"column":3}},"120":{"start":{"line":592,"column":4},"end":{"line":592,"column":64}},"121":{"start":{"line":594,"column":2},"end":{"line":594,"column":40}},"122":{"start":{"line":596,"column":0},"end":{"line":601,"column":1}},"123":{"start":{"line":597,"column":2},"end":{"line":599,"column":3}},"124":{"start":{"line":598,"column":4},"end":{"line":598,"column":66}},"125":{"start":{"line":600,"column":2},"end":{"line":600,"column":42}},"126":{"start":{"line":602,"column":0},"end":{"line":607,"column":1}},"127":{"start":{"line":603,"column":2},"end":{"line":603,"column":41}},"128":{"start":{"line":604,"column":2},"end":{"line":606,"column":3}},"129":{"start":{"line":605,"column":4},"end":{"line":605,"column":64}},"130":{"start":{"line":608,"column":0},"end":{"line":613,"column":1}},"131":{"start":{"line":609,"column":2},"end":{"line":609,"column":43}},"132":{"start":{"line":610,"column":2},"end":{"line":612,"column":3}},"133":{"start":{"line":611,"column":4},"end":{"line":611,"column":66}},"134":{"start":{"line":630,"column":0},"end":{"line":634,"column":1}},"135":{"start":{"line":631,"column":2},"end":{"line":631,"column":49}},"136":{"start":{"line":632,"column":2},"end":{"line":632,"column":53}},"137":{"start":{"line":633,"column":2},"end":{"line":633,"column":36}},"138":{"start":{"line":658,"column":0},"end":{"line":661,"column":1}},"139":{"start":{"line":659,"column":2},"end":{"line":659,"column":39}},"140":{"start":{"line":660,"column":2},"end":{"line":660,"column":28}},"141":{"start":{"line":672,"column":0},"end":{"line":677,"column":1}},"142":{"start":{"line":673,"column":2},"end":{"line":675,"column":3}},"143":{"start":{"line":674,"column":4},"end":{"line":674,"column":18}},"144":{"start":{"line":676,"column":2},"end":{"line":676,"column":21}},"145":{"start":{"line":690,"column":0},"end":{"line":690,"column":42}},"146":{"start":{"line":709,"column":0},"end":{"line":713,"column":1}},"147":{"start":{"line":710,"column":2},"end":{"line":710,"column":65}},"148":{"start":{"line":711,"column":2},"end":{"line":711,"column":52}},"149":{"start":{"line":712,"column":2},"end":{"line":712,"column":27}},"150":{"start":{"line":726,"column":0},"end":{"line":726,"column":44}},"151":{"start":{"line":745,"column":0},"end":{"line":749,"column":1}},"152":{"start":{"line":746,"column":2},"end":{"line":746,"column":54}},"153":{"start":{"line":747,"column":2},"end":{"line":747,"column":41}},"154":{"start":{"line":748,"column":2},"end":{"line":748,"column":27}},"155":{"start":{"line":763,"column":0},"end":{"line":763,"column":42}},"156":{"start":{"line":778,"column":0},"end":{"line":783,"column":1}},"157":{"start":{"line":779,"column":2},"end":{"line":779,"column":52}},"158":{"start":{"line":780,"column":2},"end":{"line":780,"column":59}},"159":{"start":{"line":781,"column":2},"end":{"line":781,"column":30}},"160":{"start":{"line":782,"column":2},"end":{"line":782,"column":12}},"161":{"start":{"line":797,"column":0},"end":{"line":797,"column":62}},"162":{"start":{"line":822,"column":0},"end":{"line":827,"column":1}},"163":{"start":{"line":823,"column":2},"end":{"line":823,"column":77}},"164":{"start":{"line":824,"column":2},"end":{"line":824,"column":69}},"165":{"start":{"line":825,"column":2},"end":{"line":825,"column":30}},"166":{"start":{"line":826,"column":2},"end":{"line":826,"column":12}},"167":{"start":{"line":831,"column":0},"end":{"line":831,"column":30}},"168":{"start":{"line":839,"column":0},"end":{"line":849,"column":1}},"169":{"start":{"line":843,"column":6},"end":{"line":843,"column":51}},"170":{"start":{"line":844,"column":6},"end":{"line":844,"column":17}},"171":{"start":{"line":847,"column":6},"end":{"line":847,"column":42}},"172":{"start":{"line":855,"column":0},"end":{"line":867,"column":1}},"173":{"start":{"line":859,"column":6},"end":{"line":859,"column":38}},"174":{"start":{"line":862,"column":6},"end":{"line":864,"column":7}},"175":{"start":{"line":863,"column":8},"end":{"line":863,"column":31}},"176":{"start":{"line":865,"column":6},"end":{"line":865,"column":44}},"177":{"start":{"line":873,"column":0},"end":{"line":885,"column":1}},"178":{"start":{"line":877,"column":6},"end":{"line":877,"column":39}},"179":{"start":{"line":880,"column":6},"end":{"line":882,"column":7}},"180":{"start":{"line":881,"column":8},"end":{"line":881,"column":31}},"181":{"start":{"line":883,"column":6},"end":{"line":883,"column":45}},"182":{"start":{"line":891,"column":0},"end":{"line":900,"column":1}},"183":{"start":{"line":895,"column":6},"end":{"line":895,"column":63}},"184":{"start":{"line":898,"column":6},"end":{"line":898,"column":69}},"185":{"start":{"line":906,"column":0},"end":{"line":915,"column":1}},"186":{"start":{"line":910,"column":6},"end":{"line":910,"column":64}},"187":{"start":{"line":913,"column":6},"end":{"line":913,"column":70}},"188":{"start":{"line":921,"column":0},"end":{"line":930,"column":1}},"189":{"start":{"line":925,"column":6},"end":{"line":925,"column":63}},"190":{"start":{"line":928,"column":6},"end":{"line":928,"column":69}},"191":{"start":{"line":936,"column":0},"end":{"line":945,"column":1}},"192":{"start":{"line":940,"column":6},"end":{"line":940,"column":64}},"193":{"start":{"line":943,"column":6},"end":{"line":943,"column":70}},"194":{"start":{"line":951,"column":0},"end":{"line":960,"column":1}},"195":{"start":{"line":955,"column":6},"end":{"line":955,"column":63}},"196":{"start":{"line":958,"column":6},"end":{"line":958,"column":69}},"197":{"start":{"line":966,"column":0},"end":{"line":975,"column":1}},"198":{"start":{"line":970,"column":6},"end":{"line":970,"column":64}},"199":{"start":{"line":973,"column":6},"end":{"line":973,"column":70}},"200":{"start":{"line":981,"column":0},"end":{"line":990,"column":1}},"201":{"start":{"line":985,"column":6},"end":{"line":985,"column":63}},"202":{"start":{"line":988,"column":6},"end":{"line":988,"column":69}},"203":{"start":{"line":996,"column":0},"end":{"line":1005,"column":1}},"204":{"start":{"line":1000,"column":6},"end":{"line":1000,"column":64}},"205":{"start":{"line":1003,"column":6},"end":{"line":1003,"column":70}},"206":{"start":{"line":1012,"column":0},"end":{"line":1021,"column":1}},"207":{"start":{"line":1016,"column":6},"end":{"line":1016,"column":40}},"208":{"start":{"line":1019,"column":6},"end":{"line":1019,"column":46}},"209":{"start":{"line":1032,"column":0},"end":{"line":1053,"column":1}},"210":{"start":{"line":1037,"column":6},"end":{"line":1037,"column":49}},"211":{"start":{"line":1038,"column":6},"end":{"line":1040,"column":7}},"212":{"start":{"line":1039,"column":8},"end":{"line":1039,"column":19}},"213":{"start":{"line":1041,"column":6},"end":{"line":1041,"column":41}},"214":{"start":{"line":1044,"column":6},"end":{"line":1044,"column":14}},"215":{"start":{"line":1045,"column":6},"end":{"line":1050,"column":7}},"216":{"start":{"line":1046,"column":8},"end":{"line":1046,"column":18}},"217":{"start":{"line":1049,"column":8},"end":{"line":1049,"column":40}},"218":{"start":{"line":1051,"column":6},"end":{"line":1051,"column":52}},"219":{"start":{"line":1056,"column":0},"end":{"line":1056,"column":27}},"220":{"start":{"line":1057,"column":0},"end":{"line":1152,"column":1}},"221":{"start":{"line":1061,"column":6},"end":{"line":1064,"column":7}},"222":{"start":{"line":1062,"column":8},"end":{"line":1062,"column":30}},"223":{"start":{"line":1063,"column":8},"end":{"line":1063,"column":79}},"224":{"start":{"line":1065,"column":6},"end":{"line":1065,"column":26}},"225":{"start":{"line":1152,"column":1},"end":{"line":1167,"column":2}},"226":{"start":{"line":1154,"column":2},"end":{"line":1157,"column":32}},"227":{"start":{"line":1158,"column":2},"end":{"line":1158,"column":33}},"228":{"start":{"line":1159,"column":2},"end":{"line":1159,"column":32}},"229":{"start":{"line":1160,"column":2},"end":{"line":1160,"column":35}},"230":{"start":{"line":1161,"column":2},"end":{"line":1163,"column":3}},"231":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":29}},"232":{"start":{"line":1164,"column":2},"end":{"line":1164,"column":36}},"233":{"start":{"line":1165,"column":2},"end":{"line":1165,"column":14}},"234":{"start":{"line":1166,"column":2},"end":{"line":1166,"column":43}},"235":{"start":{"line":1170,"column":0},"end":{"line":1174,"column":2}},"236":{"start":{"line":1171,"column":2},"end":{"line":1171,"column":32}},"237":{"start":{"line":1171,"column":26},"end":{"line":1171,"column":32}},"238":{"start":{"line":1172,"column":2},"end":{"line":1172,"column":55}},"239":{"start":{"line":1173,"column":2},"end":{"line":1173,"column":43}},"240":{"start":{"line":1177,"column":0},"end":{"line":1181,"column":26}},"241":{"start":{"line":1178,"column":2},"end":{"line":1180,"column":3}},"242":{"start":{"line":1179,"column":4},"end":{"line":1179,"column":43}},"243":{"start":{"line":1182,"column":0},"end":{"line":1189,"column":26}},"244":{"start":{"line":1183,"column":2},"end":{"line":1188,"column":3}},"245":{"start":{"line":1184,"column":4},"end":{"line":1186,"column":5}},"246":{"start":{"line":1185,"column":6},"end":{"line":1185,"column":23}},"247":{"start":{"line":1187,"column":4},"end":{"line":1187,"column":33}},"248":{"start":{"line":1195,"column":0},"end":{"line":1197,"column":2}},"249":{"start":{"line":1196,"column":2},"end":{"line":1196,"column":33}},"250":{"start":{"line":1203,"column":0},"end":{"line":1203,"column":53}},"251":{"start":{"line":1209,"column":0},"end":{"line":1209,"column":38}},"252":{"start":{"line":1223,"column":0},"end":{"line":1223,"column":48}},"253":{"start":{"line":1231,"column":0},"end":{"line":1233,"column":1}},"254":{"start":{"line":1232,"column":2},"end":{"line":1232,"column":33}},"255":{"start":{"line":1239,"column":0},"end":{"line":1241,"column":1}},"256":{"start":{"line":1240,"column":2},"end":{"line":1240,"column":36}},"257":{"start":{"line":1247,"column":0},"end":{"line":1249,"column":1}},"258":{"start":{"line":1248,"column":2},"end":{"line":1248,"column":32}},"259":{"start":{"line":1255,"column":0},"end":{"line":1257,"column":1}},"260":{"start":{"line":1256,"column":2},"end":{"line":1256,"column":26}},"261":{"start":{"line":1263,"column":0},"end":{"line":1265,"column":1}},"262":{"start":{"line":1264,"column":2},"end":{"line":1264,"column":28}},"263":{"start":{"line":1271,"column":0},"end":{"line":1273,"column":1}},"264":{"start":{"line":1272,"column":2},"end":{"line":1272,"column":41}},"265":{"start":{"line":1279,"column":0},"end":{"line":1281,"column":1}},"266":{"start":{"line":1280,"column":2},"end":{"line":1280,"column":47}},"267":{"start":{"line":1287,"column":0},"end":{"line":1289,"column":1}},"268":{"start":{"line":1288,"column":2},"end":{"line":1288,"column":48}},"269":{"start":{"line":1295,"column":0},"end":{"line":1297,"column":1}},"270":{"start":{"line":1296,"column":2},"end":{"line":1296,"column":48}},"271":{"start":{"line":1303,"column":0},"end":{"line":1305,"column":1}},"272":{"start":{"line":1304,"column":2},"end":{"line":1304,"column":42}},"273":{"start":{"line":1311,"column":0},"end":{"line":1313,"column":1}},"274":{"start":{"line":1312,"column":2},"end":{"line":1312,"column":61}},"275":{"start":{"line":1319,"column":0},"end":{"line":1321,"column":1}},"276":{"start":{"line":1320,"column":2},"end":{"line":1320,"column":42}},"277":{"start":{"line":1327,"column":0},"end":{"line":1329,"column":1}},"278":{"start":{"line":1328,"column":2},"end":{"line":1328,"column":48}},"279":{"start":{"line":1335,"column":0},"end":{"line":1337,"column":1}},"280":{"start":{"line":1336,"column":2},"end":{"line":1336,"column":43}},"281":{"start":{"line":1343,"column":0},"end":{"line":1345,"column":1}},"282":{"start":{"line":1344,"column":2},"end":{"line":1344,"column":49}},"283":{"start":{"line":1351,"column":0},"end":{"line":1353,"column":1}},"284":{"start":{"line":1352,"column":2},"end":{"line":1352,"column":42}},"285":{"start":{"line":1359,"column":0},"end":{"line":1361,"column":1}},"286":{"start":{"line":1360,"column":2},"end":{"line":1360,"column":48}},"287":{"start":{"line":1367,"column":0},"end":{"line":1369,"column":1}},"288":{"start":{"line":1368,"column":2},"end":{"line":1368,"column":43}},"289":{"start":{"line":1375,"column":0},"end":{"line":1377,"column":1}},"290":{"start":{"line":1376,"column":2},"end":{"line":1376,"column":49}},"291":{"start":{"line":1383,"column":0},"end":{"line":1385,"column":1}},"292":{"start":{"line":1384,"column":2},"end":{"line":1384,"column":48}},"293":{"start":{"line":1391,"column":0},"end":{"line":1393,"column":1}},"294":{"start":{"line":1392,"column":2},"end":{"line":1392,"column":58}},"295":{"start":{"line":1416,"column":0},"end":{"line":1416,"column":69}},"296":{"start":{"line":1419,"column":0},"end":{"line":1450,"column":1}},"297":{"start":{"line":1420,"column":2},"end":{"line":1420,"column":92}},"298":{"start":{"line":1426,"column":2},"end":{"line":1426,"column":47}},"299":{"start":{"line":1428,"column":2},"end":{"line":1428,"column":57}},"300":{"start":{"line":1429,"column":2},"end":{"line":1429,"column":63}},"301":{"start":{"line":1430,"column":2},"end":{"line":1430,"column":55}},"302":{"start":{"line":1431,"column":2},"end":{"line":1431,"column":49}},"303":{"start":{"line":1432,"column":2},"end":{"line":1432,"column":53}},"304":{"start":{"line":1433,"column":2},"end":{"line":1433,"column":63}},"305":{"start":{"line":1434,"column":2},"end":{"line":1434,"column":65}},"306":{"start":{"line":1435,"column":2},"end":{"line":1435,"column":65}},"307":{"start":{"line":1436,"column":2},"end":{"line":1436,"column":67}},"308":{"start":{"line":1437,"column":2},"end":{"line":1437,"column":65}},"309":{"start":{"line":1438,"column":2},"end":{"line":1438,"column":67}},"310":{"start":{"line":1439,"column":2},"end":{"line":1439,"column":65}},"311":{"start":{"line":1440,"column":2},"end":{"line":1440,"column":85}},"312":{"start":{"line":1441,"column":2},"end":{"line":1441,"column":65}},"313":{"start":{"line":1442,"column":2},"end":{"line":1442,"column":67}},"314":{"start":{"line":1443,"column":2},"end":{"line":1443,"column":67}},"315":{"start":{"line":1444,"column":2},"end":{"line":1444,"column":69}},"316":{"start":{"line":1445,"column":2},"end":{"line":1445,"column":65}},"317":{"start":{"line":1446,"column":2},"end":{"line":1446,"column":67}},"318":{"start":{"line":1447,"column":2},"end":{"line":1447,"column":67}},"319":{"start":{"line":1448,"column":2},"end":{"line":1448,"column":69}},"320":{"start":{"line":1449,"column":2},"end":{"line":1449,"column":79}},"321":{"start":{"line":1452,"column":0},"end":{"line":1461,"column":1}},"322":{"start":{"line":1453,"column":2},"end":{"line":1460,"column":3}},"323":{"start":{"line":1454,"column":4},"end":{"line":1454,"column":18}},"324":{"start":{"line":1456,"column":4},"end":{"line":1459,"column":5}},"325":{"start":{"line":1457,"column":6},"end":{"line":1457,"column":44}},"326":{"start":{"line":1458,"column":6},"end":{"line":1458,"column":65}}},"branchMap":{"1":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"2":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":2},"end":{"line":329,"column":2}},{"start":{"line":329,"column":2},"end":{"line":329,"column":2}}]},"3":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":2},"end":{"line":333,"column":2}},{"start":{"line":333,"column":2},"end":{"line":333,"column":2}}]},"4":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":2},"end":{"line":367,"column":2}},{"start":{"line":367,"column":2},"end":{"line":367,"column":2}}]},"5":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":4},"end":{"line":369,"column":4}},{"start":{"line":369,"column":4},"end":{"line":369,"column":4}}]},"6":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":4},"end":{"line":373,"column":4}},{"start":{"line":373,"column":4},"end":{"line":373,"column":4}}]},"7":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":11},"end":{"line":376,"column":11}},{"start":{"line":376,"column":11},"end":{"line":376,"column":11}}]},"8":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":6},"end":{"line":386,"column":6}},{"start":{"line":386,"column":6},"end":{"line":386,"column":6}}]},"9":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":8},"end":{"line":387,"column":8}},{"start":{"line":387,"column":8},"end":{"line":387,"column":8}}]},"10":{"line":387,"type":"binary-expr","locations":[{"start":{"line":387,"column":14},"end":{"line":387,"column":17}},{"start":{"line":387,"column":21},"end":{"line":387,"column":34}},{"start":{"line":387,"column":38},"end":{"line":387,"column":58}}]},"11":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":2},"end":{"line":396,"column":2}},{"start":{"line":396,"column":2},"end":{"line":396,"column":2}}]},"12":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":8},"end":{"line":396,"column":11}},{"start":{"line":396,"column":15},"end":{"line":396,"column":28}},{"start":{"line":396,"column":32},"end":{"line":396,"column":52}}]},"13":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":411,"column":2}},{"start":{"line":411,"column":2},"end":{"line":411,"column":2}}]},"14":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":2},"end":{"line":440,"column":2}},{"start":{"line":440,"column":2},"end":{"line":440,"column":2}}]},"15":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":2},"end":{"line":443,"column":2}},{"start":{"line":443,"column":2},"end":{"line":443,"column":2}}]},"16":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":2},"end":{"line":450,"column":2}},{"start":{"line":450,"column":2},"end":{"line":450,"column":2}}]},"17":{"line":455,"type":"cond-expr","locations":[{"start":{"line":455,"column":40},"end":{"line":455,"column":49}},{"start":{"line":455,"column":52},"end":{"line":455,"column":74}}]},"18":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":2},"end":{"line":476,"column":2}},{"start":{"line":476,"column":2},"end":{"line":476,"column":2}}]},"19":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":2},"end":{"line":479,"column":2}},{"start":{"line":479,"column":2},"end":{"line":479,"column":2}}]},"20":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"21":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":2},"end":{"line":512,"column":2}},{"start":{"line":512,"column":2},"end":{"line":512,"column":2}}]},"22":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":2},"end":{"line":519,"column":2}},{"start":{"line":519,"column":2},"end":{"line":519,"column":2}}]},"23":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":2},"end":{"line":544,"column":2}},{"start":{"line":544,"column":2},"end":{"line":544,"column":2}}]},"24":{"line":544,"type":"binary-expr","locations":[{"start":{"line":544,"column":6},"end":{"line":544,"column":20}},{"start":{"line":544,"column":25},"end":{"line":544,"column":48}},{"start":{"line":544,"column":52},"end":{"line":544,"column":74}}]},"25":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":2},"end":{"line":570,"column":2}},{"start":{"line":570,"column":2},"end":{"line":570,"column":2}}]},"26":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":2},"end":{"line":573,"column":2}},{"start":{"line":573,"column":2},"end":{"line":573,"column":2}}]},"27":{"line":586,"type":"cond-expr","locations":[{"start":{"line":586,"column":44},"end":{"line":586,"column":48}},{"start":{"line":586,"column":51},"end":{"line":586,"column":55}}]},"28":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":2},"end":{"line":673,"column":2}},{"start":{"line":673,"column":2},"end":{"line":673,"column":2}}]},"29":{"line":780,"type":"binary-expr","locations":[{"start":{"line":780,"column":47},"end":{"line":780,"column":53}},{"start":{"line":780,"column":57},"end":{"line":780,"column":58}}]},"30":{"line":824,"type":"binary-expr","locations":[{"start":{"line":824,"column":57},"end":{"line":824,"column":63}},{"start":{"line":824,"column":67},"end":{"line":824,"column":68}}]},"31":{"line":859,"type":"binary-expr","locations":[{"start":{"line":859,"column":26},"end":{"line":859,"column":32}},{"start":{"line":859,"column":36},"end":{"line":859,"column":37}}]},"32":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":6},"end":{"line":862,"column":6}},{"start":{"line":862,"column":6},"end":{"line":862,"column":6}}]},"33":{"line":865,"type":"binary-expr","locations":[{"start":{"line":865,"column":32},"end":{"line":865,"column":38}},{"start":{"line":865,"column":42},"end":{"line":865,"column":43}}]},"34":{"line":877,"type":"binary-expr","locations":[{"start":{"line":877,"column":27},"end":{"line":877,"column":33}},{"start":{"line":877,"column":37},"end":{"line":877,"column":38}}]},"35":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":6},"end":{"line":880,"column":6}},{"start":{"line":880,"column":6},"end":{"line":880,"column":6}}]},"36":{"line":883,"type":"binary-expr","locations":[{"start":{"line":883,"column":33},"end":{"line":883,"column":39}},{"start":{"line":883,"column":43},"end":{"line":883,"column":44}}]},"37":{"line":895,"type":"binary-expr","locations":[{"start":{"line":895,"column":51},"end":{"line":895,"column":57}},{"start":{"line":895,"column":61},"end":{"line":895,"column":62}}]},"38":{"line":898,"type":"binary-expr","locations":[{"start":{"line":898,"column":57},"end":{"line":898,"column":63}},{"start":{"line":898,"column":67},"end":{"line":898,"column":68}}]},"39":{"line":910,"type":"binary-expr","locations":[{"start":{"line":910,"column":52},"end":{"line":910,"column":58}},{"start":{"line":910,"column":62},"end":{"line":910,"column":63}}]},"40":{"line":913,"type":"binary-expr","locations":[{"start":{"line":913,"column":58},"end":{"line":913,"column":64}},{"start":{"line":913,"column":68},"end":{"line":913,"column":69}}]},"41":{"line":925,"type":"binary-expr","locations":[{"start":{"line":925,"column":51},"end":{"line":925,"column":57}},{"start":{"line":925,"column":61},"end":{"line":925,"column":62}}]},"42":{"line":928,"type":"binary-expr","locations":[{"start":{"line":928,"column":57},"end":{"line":928,"column":63}},{"start":{"line":928,"column":67},"end":{"line":928,"column":68}}]},"43":{"line":940,"type":"binary-expr","locations":[{"start":{"line":940,"column":52},"end":{"line":940,"column":58}},{"start":{"line":940,"column":62},"end":{"line":940,"column":63}}]},"44":{"line":943,"type":"binary-expr","locations":[{"start":{"line":943,"column":58},"end":{"line":943,"column":64}},{"start":{"line":943,"column":68},"end":{"line":943,"column":69}}]},"45":{"line":955,"type":"binary-expr","locations":[{"start":{"line":955,"column":51},"end":{"line":955,"column":57}},{"start":{"line":955,"column":61},"end":{"line":955,"column":62}}]},"46":{"line":958,"type":"binary-expr","locations":[{"start":{"line":958,"column":57},"end":{"line":958,"column":63}},{"start":{"line":958,"column":67},"end":{"line":958,"column":68}}]},"47":{"line":970,"type":"binary-expr","locations":[{"start":{"line":970,"column":52},"end":{"line":970,"column":58}},{"start":{"line":970,"column":62},"end":{"line":970,"column":63}}]},"48":{"line":973,"type":"binary-expr","locations":[{"start":{"line":973,"column":58},"end":{"line":973,"column":64}},{"start":{"line":973,"column":68},"end":{"line":973,"column":69}}]},"49":{"line":985,"type":"binary-expr","locations":[{"start":{"line":985,"column":51},"end":{"line":985,"column":57}},{"start":{"line":985,"column":61},"end":{"line":985,"column":62}}]},"50":{"line":988,"type":"binary-expr","locations":[{"start":{"line":988,"column":57},"end":{"line":988,"column":63}},{"start":{"line":988,"column":67},"end":{"line":988,"column":68}}]},"51":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":52},"end":{"line":1000,"column":58}},{"start":{"line":1000,"column":62},"end":{"line":1000,"column":63}}]},"52":{"line":1003,"type":"binary-expr","locations":[{"start":{"line":1003,"column":58},"end":{"line":1003,"column":64}},{"start":{"line":1003,"column":68},"end":{"line":1003,"column":69}}]},"53":{"line":1016,"type":"binary-expr","locations":[{"start":{"line":1016,"column":28},"end":{"line":1016,"column":34}},{"start":{"line":1016,"column":38},"end":{"line":1016,"column":39}}]},"54":{"line":1019,"type":"binary-expr","locations":[{"start":{"line":1019,"column":34},"end":{"line":1019,"column":40}},{"start":{"line":1019,"column":44},"end":{"line":1019,"column":45}}]},"55":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":6},"end":{"line":1038,"column":6}},{"start":{"line":1038,"column":6},"end":{"line":1038,"column":6}}]},"56":{"line":1045,"type":"if","locations":[{"start":{"line":1045,"column":6},"end":{"line":1045,"column":6}},{"start":{"line":1045,"column":6},"end":{"line":1045,"column":6}}]},"57":{"line":1061,"type":"if","locations":[{"start":{"line":1061,"column":6},"end":{"line":1061,"column":6}},{"start":{"line":1061,"column":6},"end":{"line":1061,"column":6}}]},"58":{"line":1154,"type":"binary-expr","locations":[{"start":{"line":1154,"column":17},"end":{"line":1154,"column":32}},{"start":{"line":1155,"column":17},"end":{"line":1155,"column":32}},{"start":{"line":1156,"column":17},"end":{"line":1156,"column":34}},{"start":{"line":1157,"column":17},"end":{"line":1157,"column":32}}]},"59":{"line":1159,"type":"binary-expr","locations":[{"start":{"line":1159,"column":9},"end":{"line":1159,"column":18}},{"start":{"line":1159,"column":22},"end":{"line":1159,"column":31}}]},"60":{"line":1161,"type":"if","locations":[{"start":{"line":1161,"column":2},"end":{"line":1161,"column":2}},{"start":{"line":1161,"column":2},"end":{"line":1161,"column":2}}]},"61":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":2},"end":{"line":1171,"column":2}},{"start":{"line":1171,"column":2},"end":{"line":1171,"column":2}}]},"62":{"line":1179,"type":"cond-expr","locations":[{"start":{"line":1179,"column":31},"end":{"line":1179,"column":35}},{"start":{"line":1179,"column":38},"end":{"line":1179,"column":43}}]},"63":{"line":1184,"type":"if","locations":[{"start":{"line":1184,"column":4},"end":{"line":1184,"column":4}},{"start":{"line":1184,"column":4},"end":{"line":1184,"column":4}}]},"64":{"line":1185,"type":"cond-expr","locations":[{"start":{"line":1185,"column":18},"end":{"line":1185,"column":19}},{"start":{"line":1185,"column":22},"end":{"line":1185,"column":23}}]},"65":{"line":1419,"type":"if","locations":[{"start":{"line":1419,"column":0},"end":{"line":1419,"column":0}},{"start":{"line":1419,"column":0},"end":{"line":1419,"column":0}}]},"66":{"line":1453,"type":"if","locations":[{"start":{"line":1453,"column":2},"end":{"line":1453,"column":2}},{"start":{"line":1453,"column":2},"end":{"line":1453,"column":2}}]}},"code":["","var assert = require('assert')","var debug = require('debug')('ref')","","exports = module.exports = require('bindings')('binding')","","/**"," * A `Buffer` that references the C NULL pointer. That is, its memory address"," * points to 0. Its `length` is 0 because accessing any data from this buffer"," * would cause a _segmentation fault_."," *"," * ```"," * console.log(ref.NULL);"," * <SlowBuffer@0x0 >"," * ```"," *"," * @name NULL"," * @type Buffer"," */","","/**"," * A string that represents the native endianness of the machine's processor."," * The possible values are either `\"LE\"` or `\"BE\"`."," *"," * ```"," * console.log(ref.endianness);"," * 'LE'"," * ```"," *"," * @name endianness"," * @type String"," */","","/**"," * Accepts a `Buffer` instance and returns the memory address of the buffer"," * instance."," *"," * ```"," * console.log(ref.address(new Buffer(1)));"," * 4320233616"," *"," * console.log(ref.address(ref.NULL)));"," * 0"," * ```"," *"," * @param {Buffer} buffer The buffer to get the memory address of."," * @return {Number} The memory address the buffer instance."," * @name address"," * @type method"," */","","/**"," * Accepts a `Buffer` instance and returns _true_ if the buffer represents the"," * NULL pointer, _false_ otherwise."," *"," * ```"," * console.log(ref.isNull(new Buffer(1)));"," * false"," *"," * console.log(ref.isNull(ref.NULL));"," * true"," * ```"," *"," * @param {Buffer} buffer The buffer to check for NULL."," * @return {Boolean} true or false."," * @name isNull"," * @type method"," */","","/**"," * Reads a JavaScript Object that has previously been written to the given"," * _buffer_ at the given _offset_."," *"," * ```"," * var obj = { foo: 'bar' };"," * var buf = ref.alloc('Object', obj);"," *"," * var obj2 = ref.readObject(buf, 0);"," * console.log(obj === obj2);"," * true"," * ```"," *"," * @param {Buffer} buffer The buffer to read an Object from."," * @param {Number} offset The offset to begin reading from."," * @return {Object} The Object that was read from _buffer_."," * @name readObject"," * @type method"," */","","/**"," * Reads a Buffer instance from the given _buffer_ at the given _offset_."," * The _size_ parameter specifies the `length` of the returned Buffer instance,"," * which defaults to __0__."," *"," * ```"," * var buf = new Buffer('hello world');"," * var pointer = ref.alloc('pointer');"," *"," * var buf2 = ref.readPointer(pointer, 0, buf.length);"," * console.log(buf.toString());"," * 'hello world'"," * ```"," *"," * @param {Buffer} buffer The buffer to read a Buffer from."," * @param {Number} offset The offset to begin reading from."," * @param {Number} length (optional) The length of the returned Buffer. Defaults to 0."," * @return {Buffer} The Buffer instance that was read from _buffer_."," * @name readPointer"," * @type method"," */","","/**"," * Returns a JavaScript String read from _buffer_ at the given _offset_. The"," * C String is read until the first NULL byte, which indicates the end of the"," * String."," *"," * This function can read beyond the `length` of a Buffer."," *"," * ```"," * var buf = new Buffer('hello\\0world\\0');"," *"," * var str = ref.readCString(buf, 0);"," * console.log(str);"," * 'hello'"," * ```"," *"," * @param {Buffer} buffer The buffer to read a Buffer from."," * @param {Number} offset The offset to begin reading from."," * @return {String} The String that was read from _buffer_."," * @name readCString"," * @type method"," */","","/**"," * Returns a big-endian signed 64-bit int read from _buffer_ at the given"," * _offset_."," *"," * If the returned value will fit inside a JavaScript Number without losing"," * precision, then a Number is returned, otherwise a String is returned."," *"," * ```"," * var buf = ref.alloc('int64');"," * ref.writeInt64BE(buf, 0, '9223372036854775807');"," *"," * var val = ref.readInt64BE(buf, 0)"," * console.log(val)"," * '9223372036854775807'"," * ```"," *"," * @param {Buffer} buffer The buffer to read a Buffer from."," * @param {Number} offset The offset to begin reading from."," * @return {Number|String} The Number or String that was read from _buffer_."," * @name readInt64BE"," * @type method"," */","","/**"," * Returns a little-endian signed 64-bit int read from _buffer_ at the given"," * _offset_."," *"," * If the returned value will fit inside a JavaScript Number without losing"," * precision, then a Number is returned, otherwise a String is returned."," *"," * ```"," * var buf = ref.alloc('int64');"," * ref.writeInt64LE(buf, 0, '9223372036854775807');"," *"," * var val = ref.readInt64LE(buf, 0)"," * console.log(val)"," * '9223372036854775807'"," * ```"," *"," * @param {Buffer} buffer The buffer to read a Buffer from."," * @param {Number} offset The offset to begin reading from."," * @return {Number|String} The Number or String that was read from _buffer_."," * @name readInt64LE"," * @type method"," */","","/**"," * Returns a big-endian unsigned 64-bit int read from _buffer_ at the given"," * _offset_."," *"," * If the returned value will fit inside a JavaScript Number without losing"," * precision, then a Number is returned, otherwise a String is returned."," *"," * ```"," * var buf = ref.alloc('uint64');"," * ref.writeUInt64BE(buf, 0, '18446744073709551615');"," *"," * var val = ref.readUInt64BE(buf, 0)"," * console.log(val)"," * '18446744073709551615'"," * ```"," *"," * @param {Buffer} buffer The buffer to read a Buffer from."," * @param {Number} offset The offset to begin reading from."," * @return {Number|String} The Number or String that was read from _buffer_."," * @name readUInt64BE"," * @type method"," */","","/**"," * Returns a little-endian unsigned 64-bit int read from _buffer_ at the given"," * _offset_."," *"," * If the returned value will fit inside a JavaScript Number without losing"," * precision, then a Number is returned, otherwise a String is returned."," *"," * ```"," * var buf = ref.alloc('uint64');"," * ref.writeUInt64LE(buf, 0, '18446744073709551615');"," *"," * var val = ref.readUInt64LE(buf, 0)"," * console.log(val)"," * '18446744073709551615'"," * ```"," *"," * @param {Buffer} buffer The buffer to read a Buffer from."," * @param {Number} offset The offset to begin reading from."," * @return {Number|String} The Number or String that was read from _buffer_."," * @name readUInt64LE"," * @type method"," */","","/**"," * Writes the _input_ Number or String as a big-endian signed 64-bit int into"," * _buffer_ at the given _offset_."," *"," * ```"," * var buf = ref.alloc('int64');"," * ref.writeInt64BE(buf, 0, '9223372036854775807');"," * ```"," *"," * @param {Buffer} buffer The buffer to write to."," * @param {Number} offset The offset to begin writing from."," * @param {Number|String} input This String or Number which gets written."," * @name writeInt64BE"," * @type method"," */","","/**"," * Writes the _input_ Number or String as a little-endian signed 64-bit int into"," * _buffer_ at the given _offset_."," *"," * ```"," * var buf = ref.alloc('int64');"," * ref.writeInt64LE(buf, 0, '9223372036854775807');"," * ```"," *"," * @param {Buffer} buffer The buffer to write to."," * @param {Number} offset The offset to begin writing from."," * @param {Number|String} input This String or Number which gets written."," * @name writeInt64LE"," * @type method"," */","","/**"," * Writes the _input_ Number or String as a big-endian unsigned 64-bit int into"," * _buffer_ at the given _offset_."," *"," * ```"," * var buf = ref.alloc('uint64');"," * ref.writeUInt64BE(buf, 0, '18446744073709551615');"," * ```"," *"," * @param {Buffer} buffer The buffer to write to."," * @param {Number} offset The offset to begin writing from."," * @param {Number|String} input This String or Number which gets written."," * @name writeUInt64BE"," * @type method"," */","","/**"," * Writes the _input_ Number or String as a little-endian unsigned 64-bit int"," * into _buffer_ at the given _offset_."," *"," * ```"," * var buf = ref.alloc('uint64');"," * ref.writeUInt64LE(buf, 0, '18446744073709551615');"," * ```"," *"," * @param {Buffer} buffer The buffer to write to."," * @param {Number} offset The offset to begin writing from."," * @param {Number|String} input This String or Number which gets written."," * @name writeUInt64LE"," * @type method"," */","","/**"," * Returns a new clone of the given \"type\" object, with its"," * `indirection` level incremented by **1**."," *"," * Say you wanted to create a type representing a `void *`:"," *"," * ```"," * var voidPtrType = ref.refType(ref.types.void);"," * ```"," *"," * @param {Object|String} type The \"type\" object to create a reference type from. Strings get coerced first."," * @return {Object} The new \"type\" object with its `indirection` incremented by 1."," */","","exports.refType = function refType (type) {","  var _type = exports.coerceType(type)","  var rtn = Object.create(_type)","  rtn.indirection++","  if (_type.name) {","    Object.defineProperty(rtn, 'name', {","      value: _type.name + '*',","      configurable: true,","      enumerable: true,","      writable: true","    })","  }","  return rtn","}","","/**"," * Returns a new clone of the given \"type\" object, with its"," * `indirection` level decremented by 1."," *"," * @param {Object|String} type The \"type\" object to create a dereference type from. Strings get coerced first."," * @return {Object} The new \"type\" object with its `indirection` decremented by 1."," */","","exports.derefType = function derefType (type) {","  var _type = exports.coerceType(type)","  if (_type.indirection === 1) {","    throw new Error('Cannot create deref\\'d type for type with indirection 1')","  }","  var rtn = Object.getPrototypeOf(_type)","  if (rtn.indirection !== _type.indirection - 1) {","    // slow case","    rtn = Object.create(_type)","    rtn.indirection--","  }","  return rtn","}","","/**"," * Coerces a \"type\" object from a String or an actual \"type\" object. String values"," * are looked up from the `ref.types` Object. So:"," *"," *   * `\"int\"` gets coerced into `ref.types.int`."," *   * `\"int *\"` gets translated into `ref.refType(ref.types.int)`"," *   * `ref.types.int` gets translated into `ref.types.int` (returns itself)"," *"," * Throws an Error if no valid \"type\" object could be determined. Most `ref`"," * functions use this function under the hood, so anywhere a \"type\" object is"," * expected, a String may be passed as well, including simply setting the"," * `buffer.type` property."," *"," * ```"," * var type = ref.coerceType('int **');"," *"," * console.log(type.indirection);"," * 3"," * ```"," *"," * @param {Object|String} type The \"type\" Object or String to coerce."," * @return {Object} A \"type\" object"," */","","exports.coerceType = function coerceType (type) {","  var rtn = type","  if (typeof rtn === 'string') {","    rtn = exports.types[type]","    if (rtn) return rtn","","    // strip whitespace","    rtn = type.replace(/\\s+/g, '').toLowerCase()","    if (rtn === 'pointer') {","      // legacy \"pointer\" being used :(","      rtn = exports.refType(exports.types.void) // void *","    } else if (rtn === 'string') {","      rtn = exports.types.CString // special char * type","    } else {","      var refCount = 0","      rtn = rtn.replace(/\\*/g, function () {","        refCount++","        return ''","      })","      // allow string names to be passed in","      rtn = exports.types[rtn]","      if (refCount > 0) {","        if (!(rtn && 'size' in rtn && 'indirection' in rtn)) {","          throw new TypeError('could not determine a proper \"type\" from: ' + JSON.stringify(type))","        }","        for (var i = 0; i < refCount; i++) {","          rtn = exports.refType(rtn)","        }","      }","    }","  }","  if (!(rtn && 'size' in rtn && 'indirection' in rtn)) {","    throw new TypeError('could not determine a proper \"type\" from: ' + JSON.stringify(type))","  }","  return rtn","}","","/**"," * Returns the \"type\" property of the given Buffer."," * Creates a default type for the buffer when none exists."," *"," * @param {Buffer} buffer The Buffer instance to get the \"type\" object from."," * @return {Object} The \"type\" object from the given Buffer."," */","","exports.getType = function getType (buffer) {","  if (!buffer.type) {","    debug('WARN: no \"type\" found on buffer, setting default \"type\"', buffer)","    buffer.type = {}","    buffer.type.size = buffer.length","    buffer.type.indirection = 1","    buffer.type.get = function get () {","      throw new Error('unknown \"type\"; cannot get()')","    }","    buffer.type.set = function set () {","      throw new Error('unknown \"type\"; cannot set()')","    }","  }","  return exports.coerceType(buffer.type)","}","","/**"," * Calls the `get()` function of the Buffer's current \"type\" (or the"," * passed in _type_ if present) at the given _offset_."," *"," * This function handles checking the \"indirection\" level and returning a"," * proper \"dereferenced\" Bufffer instance when necessary."," *"," * @param {Buffer} buffer The Buffer instance to read from."," * @param {Number} offset (optional) The offset on the Buffer to start reading from. Defaults to 0."," * @param {Object|String} type (optional) The \"type\" object to use when reading. Defaults to calling `getType()` on the buffer."," * @return {?} Whatever value the \"type\" used when reading returns."," */","","exports.get = function get (buffer, offset, type) {","  if (!offset) {","    offset = 0","  }","  if (type) {","    type = exports.coerceType(type)","  } else {","    type = exports.getType(buffer)","  }","  debug('get(): (offset: %d)', offset, buffer)","  assert(type.indirection > 0, '\"indirection\" level must be at least 1')","  if (type.indirection === 1) {","    // need to check \"type\"","    return type.get(buffer, offset)","  } else {","    // need to create a deref'd Buffer","    var size = type.indirection === 2 ? type.size : exports.sizeof.pointer","    var reference = exports.readPointer(buffer, offset, size)","    reference.type = exports.derefType(type)","    return reference","  }","}","","/**"," * Calls the `set()` function of the Buffer's current \"type\" (or the"," * passed in _type_ if present) at the given _offset_."," *"," * This function handles checking the \"indirection\" level writing a pointer rather"," * than calling the `set()` function if the indirection is greater than 1."," *"," * @param {Buffer} buffer The Buffer instance to write to."," * @param {Number} offset The offset on the Buffer to start writing to."," * @param {?} value The value to write to the Buffer instance."," * @param {Object|String} type (optional) The \"type\" object to use when reading. Defaults to calling `getType()` on the buffer."," */","","exports.set = function set (buffer, offset, value, type) {","  if (!offset) {","    offset = 0","  }","  if (type) {","    type = exports.coerceType(type)","  } else {","    type = exports.getType(buffer)","  }","  debug('set(): (offset: %d)', offset, buffer, value)","  assert(type.indirection >= 1, '\"indirection\" level must be at least 1')","  if (type.indirection === 1) {","    type.set(buffer, offset, value)","  } else {","    exports.writePointer(buffer, offset, value)","  }","}","","","/**"," * Returns a new Buffer instance big enough to hold `type`,"," * with the given `value` written to it."," *"," * ``` js"," * var intBuf = ref.alloc(ref.types.int)"," * var int_with_4 = ref.alloc(ref.types.int, 4)"," * ```"," *"," * @param {Object|String} type The \"type\" object to allocate. Strings get coerced first."," * @param {?} value (optional) The initial value set on the returned Buffer, using _type_'s `set()` function."," * @return {Buffer} A new Buffer instance with it's `type` set to \"type\", and (optionally) \"value\" written to it."," */","","exports.alloc = function alloc (_type, value) {","  var type = exports.coerceType(_type)","  debug('allocating Buffer for type with \"size\"', type.size)","  var size","  if (type.indirection === 1) {","    size = type.size","  } else {","    size = exports.sizeof.pointer","  }","  var buffer = new Buffer(size)","  buffer.type = type","  if (arguments.length >= 2) {","    debug('setting value on allocated buffer', value)","    exports.set(buffer, 0, value, type)","  }","  return buffer","}","","/**"," * Returns a new `Buffer` instance with the given String written to it with the"," * given encoding (defaults to __'utf8'__). The buffer is 1 byte longer than the"," * string itself, and is NUL terminated."," *"," * ```"," * var buf = ref.allocCString('hello world');"," *"," * console.log(buf.toString());"," * 'hello world\\u0000'"," * ```"," *"," * @param {String} string The JavaScript string to be converted to a C string."," * @param {String} encoding (optional) The encoding to use for the C string. Defaults to __'utf8'__."," * @return {Buffer} The new `Buffer` instance with the specified String wrtten to it, and a trailing NUL byte."," */","","exports.allocCString = function allocCString (string, encoding) {","  if (null == string || (Buffer.isBuffer(string) && exports.isNull(string))) {","    return exports.NULL","  }","  var size = Buffer.byteLength(string, encoding) + 1","  var buffer = new Buffer(size)","  exports.writeCString(buffer, 0, string, encoding)","  buffer.type = charPtrType","  return buffer","}","","/**"," * Writes the given string as a C String (NULL terminated) to the given buffer"," * at the given offset. \"encoding\" is optional and defaults to __'utf8'__."," *"," * Unlike `readCString()`, this function requires the buffer to actually have the"," * proper length."," *"," * @param {Buffer} buffer The Buffer instance to write to."," * @param {Number} offset The offset of the buffer to begin writing at."," * @param {String} string The JavaScript String to write that will be written to the buffer."," * @param {String} encoding (optional) The encoding to read the C string as. Defaults to __'utf8'__."," */","","exports.writeCString = function writeCString (buffer, offset, string, encoding) {","  assert(Buffer.isBuffer(buffer), 'expected a Buffer as the first argument')","  assert.equal('string', typeof string, 'expected a \"string\" as the third argument')","  if (!offset) {","    offset = 0","  }","  if (!encoding) {","    encoding = 'utf8'","  }","  var size = buffer.length - offset","  var len = buffer.write(string, offset, size, encoding)","  buffer.writeUInt8(0, offset + len)  // NUL terminate","}","","exports['readInt64' + exports.endianness] = exports.readInt64","exports['readUInt64' + exports.endianness] = exports.readUInt64","exports['writeInt64' + exports.endianness] = exports.writeInt64","exports['writeUInt64' + exports.endianness] = exports.writeUInt64","","var opposite = exports.endianness == 'LE' ? 'BE' : 'LE'","var int64temp = new Buffer(exports.sizeof.int64)","var uint64temp = new Buffer(exports.sizeof.uint64)","","exports['readInt64' + opposite] = function (buffer, offset) {","  for (var i = 0; i < exports.sizeof.int64; i++) {","    int64temp[i] = buffer[offset + exports.sizeof.int64 - i - 1]","  }","  return exports.readInt64(int64temp, 0)","}","exports['readUInt64' + opposite] = function (buffer, offset) {","  for (var i = 0; i < exports.sizeof.uint64; i++) {","    uint64temp[i] = buffer[offset + exports.sizeof.uint64 - i - 1]","  }","  return exports.readUInt64(uint64temp, 0)","}","exports['writeInt64' + opposite] = function (buffer, offset, value) {","  exports.writeInt64(int64temp, 0, value)","  for (var i = 0; i < exports.sizeof.int64; i++) {","    buffer[offset + i] = int64temp[exports.sizeof.int64 - i - 1]","  }","}","exports['writeUInt64' + opposite] = function (buffer, offset, value) {","  exports.writeUInt64(uint64temp, 0, value)","  for (var i = 0; i < exports.sizeof.uint64; i++) {","    buffer[offset + i] = uint64temp[exports.sizeof.uint64 - i - 1]","  }","}","","/**"," * `ref()` accepts a Buffer instance and returns a new Buffer"," * instance that is \"pointer\" sized and has its data pointing to the given"," * Buffer instance. Essentially the created Buffer is a \"reference\" to the"," * original pointer, equivalent to the following C code:"," *"," * ``` c"," * char *buf = buffer;"," * char **ref = &buf;"," * ```"," *"," * @param {Buffer} buffer A Buffer instance to create a reference to."," * @return {Buffer} A new Buffer instance pointing to _buffer_."," */","","exports.ref = function ref (buffer) {","  debug('creating a reference to buffer', buffer)","  var type = exports.refType(exports.getType(buffer))","  return exports.alloc(type, buffer)","}","","/**"," * Accepts a Buffer instance and attempts to \"dereference\" it."," * That is, first it checks the `indirection` count of _buffer_'s \"type\", and if"," * it's greater than __1__ then it merely returns another Buffer, but with one"," * level less `indirection`."," *"," * When _buffer_'s indirection is at __1__, then it checks for `buffer.type`"," * which should be an Object with its own `get()` function."," *"," * ```"," * var buf = ref.alloc('int', 6);"," *"," * var val = ref.deref(buf);"," * console.log(val);"," * 6"," * ```"," *"," *"," * @param {Buffer} buffer A Buffer instance to dereference."," * @return {?} The returned value after dereferencing _buffer_."," */","","exports.deref = function deref (buffer) {","  debug('dereferencing buffer', buffer)","  return exports.get(buffer)","}","","/**"," * Attaches _object_ to _buffer_ such that it prevents _object_ from being garbage"," * collected until _buffer_ does."," *"," * @param {Buffer} buffer A Buffer instance to attach _object_ to."," * @param {Object|Buffer} object An Object or Buffer to prevent from being garbage collected until _buffer_ does."," * @api private"," */","","exports._attach = function _attach (buf, obj) {","  if (!buf._refs) {","    buf._refs = []","  }","  buf._refs.push(obj)","}","","/**"," * Same as `ref.writeObject()`, except that this version does not _attach_ the"," * Object to the Buffer, which is potentially unsafe if the garbage collector"," * runs."," *"," * @param {Buffer} buffer A Buffer instance to write _object_ to."," * @param {Number} offset The offset on the Buffer to start writing at."," * @param {Object} object The Object to be written into _buffer_."," * @api private"," */","","exports._writeObject = exports.writeObject","","/**"," * Writes a pointer to _object_ into _buffer_ at the specified _offset."," *"," * This function \"attaches\" _object_ to _buffer_ to prevent it from being garbage"," * collected."," *"," * ```"," * var buf = ref.alloc('Object');"," * ref.writeObject(buf, 0, { foo: 'bar' });"," *"," * ```"," *"," * @param {Buffer} buffer A Buffer instance to write _object_ to."," * @param {Number} offset The offset on the Buffer to start writing at."," * @param {Object} object The Object to be written into _buffer_."," */","","exports.writeObject = function writeObject (buf, offset, obj, persistent) {","  debug('writing Object to buffer', buf, offset, obj, persistent)","  exports._writeObject(buf, offset, obj, persistent)","  exports._attach(buf, obj)","}","","/**"," * Same as `ref.writePointer()`, except that this version does not attach"," * _pointer_ to _buffer_, which is potentially unsafe if the garbage collector"," * runs."," *"," * @param {Buffer} buffer A Buffer instance to write _pointer to."," * @param {Number} offset The offset on the Buffer to start writing at."," * @param {Buffer} pointer The Buffer instance whose memory address will be written to _buffer_."," * @api private"," */","","exports._writePointer = exports.writePointer","","/**"," * Writes the memory address of _pointer_ to _buffer_ at the specified _offset_."," *"," * This function \"attaches\" _object_ to _buffer_ to prevent it from being garbage"," * collected."," *"," * ```"," * var someBuffer = new Buffer('whatever');"," * var buf = ref.alloc('pointer');"," * ref.writePointer(buf, 0, someBuffer);"," * ```"," *"," * @param {Buffer} buffer A Buffer instance to write _pointer to."," * @param {Number} offset The offset on the Buffer to start writing at."," * @param {Buffer} pointer The Buffer instance whose memory address will be written to _buffer_."," */","","exports.writePointer = function writePointer (buf, offset, ptr) {","  debug('writing pointer to buffer', buf, offset, ptr)","  exports._writePointer(buf, offset, ptr)","  exports._attach(buf, ptr)","}","","/**"," * Same as `ref.reinterpret()`, except that this version does not attach"," * _buffer_ to the returned Buffer, which is potentially unsafe if the"," * garbage collector runs."," *"," * @param {Buffer} buffer A Buffer instance to base the returned Buffer off of."," * @param {Number} size The `length` property of the returned Buffer."," * @param {Number} offset The offset of the Buffer to begin from."," * @return {Buffer} A new Buffer instance with the same memory address as _buffer_, and the requested _size_."," * @api private"," */","","exports._reinterpret = exports.reinterpret","","/**"," * Returns a new Buffer instance with the specified _size_, with the same memory"," * address as _buffer_."," *"," * This function \"attaches\" _buffer_ to the returned Buffer to prevent it from"," * being garbage collected."," *"," * @param {Buffer} buffer A Buffer instance to base the returned Buffer off of."," * @param {Number} size The `length` property of the returned Buffer."," * @param {Number} offset The offset of the Buffer to begin from."," * @return {Buffer} A new Buffer instance with the same memory address as _buffer_, and the requested _size_."," */","","exports.reinterpret = function reinterpret (buffer, size, offset) {","  debug('reinterpreting buffer to \"%d\" bytes', size)","  var rtn = exports._reinterpret(buffer, size, offset || 0)","  exports._attach(rtn, buffer)","  return rtn","}","","/**"," * Same as `ref.reinterpretUntilZeros()`, except that this version does not"," * attach _buffer_ to the returned Buffer, which is potentially unsafe if the"," * garbage collector runs."," *"," * @param {Buffer} buffer A Buffer instance to base the returned Buffer off of."," * @param {Number} size The number of sequential, aligned `NULL` bytes that are required to terminate the buffer."," * @param {Number} offset The offset of the Buffer to begin from."," * @return {Buffer} A new Buffer instance with the same memory address as _buffer_, and a variable `length` that is terminated by _size_ NUL bytes."," * @api private"," */","","exports._reinterpretUntilZeros = exports.reinterpretUntilZeros","","/**"," * Accepts a `Buffer` instance and a number of `NULL` bytes to read from the"," * pointer. This function will scan past the boundary of the Buffer's `length`"," * until it finds `size` number of aligned `NULL` bytes."," *"," * This is useful for finding the end of NUL-termintated array or C string. For"," * example, the `readCString()` function _could_ be implemented like:"," *"," * ```"," * function readCString (buf) {"," *   return ref.reinterpretUntilZeros(buf, 1).toString('utf8')"," * }"," * ```"," *"," * This function \"attaches\" _buffer_ to the returned Buffer to prevent it from"," * being garbage collected."," *"," * @param {Buffer} buffer A Buffer instance to base the returned Buffer off of."," * @param {Number} size The number of sequential, aligned `NULL` bytes are required to terminate the buffer."," * @param {Number} offset The offset of the Buffer to begin from."," * @return {Buffer} A new Buffer instance with the same memory address as _buffer_, and a variable `length` that is terminated by _size_ NUL bytes."," */","","exports.reinterpretUntilZeros = function reinterpretUntilZeros (buffer, size, offset) {","  debug('reinterpreting buffer to until \"%d\" NULL (0) bytes are found', size)","  var rtn = exports._reinterpretUntilZeros(buffer, size, offset || 0)","  exports._attach(rtn, buffer)","  return rtn","}","","","// the built-in \"types\"","var types = exports.types = {}","","/**"," * The `void` type."," *"," * @section types"," */","","types.void = {","    size: 0","  , indirection: 1","  , get: function get (buf, offset) {","      debug('getting `void` type (returns `null`)')","      return null","    }","  , set: function set (buf, offset, val) {","      debug('setting `void` type (no-op)')","    }","}","","/**"," * The `int8` type."," */","","types.int8 = {","    size: exports.sizeof.int8","  , indirection: 1","  , get: function get (buf, offset) {","      return buf.readInt8(offset || 0)","    }","  , set: function set (buf, offset, val) {","      if (typeof val === 'string') {","        val = val.charCodeAt(0)","      }","      return buf.writeInt8(val, offset || 0)","    }","}","","/**"," * The `uint8` type."," */","","types.uint8 = {","    size: exports.sizeof.uint8","  , indirection: 1","  , get: function get (buf, offset) {","      return buf.readUInt8(offset || 0)","    }","  , set: function set (buf, offset, val) {","      if (typeof val === 'string') {","        val = val.charCodeAt(0)","      }","      return buf.writeUInt8(val, offset || 0)","    }","}","","/**"," * The `int16` type."," */","","types.int16 = {","    size: exports.sizeof.int16","  , indirection: 1","  , get: function get (buf, offset) {","      return buf['readInt16' + exports.endianness](offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf['writeInt16' + exports.endianness](val, offset || 0)","    }","}","","/**"," * The `uint16` type."," */","","types.uint16 = {","    size: exports.sizeof.uint16","  , indirection: 1","  , get: function get (buf, offset) {","      return buf['readUInt16' + exports.endianness](offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf['writeUInt16' + exports.endianness](val, offset || 0)","    }","}","","/**"," * The `int32` type."," */","","types.int32 = {","    size: exports.sizeof.int32","  , indirection: 1","  , get: function get (buf, offset) {","      return buf['readInt32' + exports.endianness](offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf['writeInt32' + exports.endianness](val, offset || 0)","    }","}","","/**"," * The `uint32` type."," */","","types.uint32 = {","    size: exports.sizeof.uint32","  , indirection: 1","  , get: function get (buf, offset) {","      return buf['readUInt32' + exports.endianness](offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf['writeUInt32' + exports.endianness](val, offset || 0)","    }","}","","/**"," * The `int64` type."," */","","types.int64 = {","    size: exports.sizeof.int64","  , indirection: 1","  , get: function get (buf, offset) {","      return buf['readInt64' + exports.endianness](offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf['writeInt64' + exports.endianness](val, offset || 0)","    }","}","","/**"," * The `uint64` type."," */","","types.uint64 = {","    size: exports.sizeof.uint64","  , indirection: 1","  , get: function get (buf, offset) {","      return buf['readUInt64' + exports.endianness](offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf['writeUInt64' + exports.endianness](val, offset || 0)","    }","}","","/**"," * The `float` type."," */","","types.float = {","    size: exports.sizeof.float","  , indirection: 1","  , get: function get (buf, offset) {","      return buf['readFloat' + exports.endianness](offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf['writeFloat' + exports.endianness](val, offset || 0)","    }","}","","/**"," * The `double` type."," */","","types.double = {","    size: exports.sizeof.double","  , indirection: 1","  , get: function get (buf, offset) {","      return buf['readDouble' + exports.endianness](offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf['writeDouble' + exports.endianness](val, offset || 0)","    }","}","","/**"," * The `Object` type. This can be used to read/write regular JS Objects"," * into raw memory."," */","","types.Object = {","    size: exports.sizeof.Object","  , indirection: 1","  , get: function get (buf, offset) {","      return buf.readObject(offset || 0)","    }","  , set: function set (buf, offset, val) {","      return buf.writeObject(val, offset || 0)","    }","}","","/**"," * The `CString` (a.k.a `\"string\"`) type."," *"," * CStrings are a kind of weird thing. We say it's `sizeof(char *)`, and"," * `indirection` level of 1, which means that we have to return a Buffer that"," * is pointer sized, and points to a some utf8 string data, so we have to create"," * a 2nd \"in-between\" buffer."," */","","types.CString = {","    size: exports.sizeof.pointer","  , alignment: exports.alignof.pointer","  , indirection: 1","  , get: function get (buf, offset) {","      var _buf = exports.readPointer(buf, offset)","      if (exports.isNull(_buf)) {","        return null","      }","      return exports.readCString(_buf, 0)","    }","  , set: function set (buf, offset, val) {","      var _buf","      if (Buffer.isBuffer(val)) {","        _buf = val","      } else {","        // assume string","        _buf = exports.allocCString(val)","      }","      return exports.writePointer(buf, offset, _buf)","    }","}","","// alias Utf8String","var utfstringwarned = false","Object.defineProperty(types, 'Utf8String', {","    enumerable: false","  , configurable: true","  , get: function () {","      if (!utfstringwarned) {","        utfstringwarned = true","        console.error('\"Utf8String\" type is deprecated, use \"CString\" instead')","      }","      return types.CString","    }","})","","/**"," * The `bool` type."," *"," * Wrapper type around `types.uint8` that accepts/returns `true` or"," * `false` Boolean JavaScript values."," *"," * @name bool"," *"," */","","/**"," * The `byte` type."," *"," * @name byte"," */","","/**"," * The `char` type."," *"," * @name char"," */","","/**"," * The `uchar` type."," *"," * @name uchar"," */","","/**"," * The `short` type."," *"," * @name short"," */","","/**"," * The `ushort` type."," *"," * @name ushort"," */","","/**"," * The `int` type."," *"," * @name int"," */","","/**"," * The `uint` type."," *"," * @name uint"," */","","/**"," * The `long` type."," *"," * @name long"," */","","/**"," * The `ulong` type."," *"," * @name ulong"," */","","/**"," * The `longlong` type."," *"," * @name longlong"," */","","/**"," * The `ulonglong` type."," *"," * @name ulonglong"," */","","/**"," * The `size_t` type."," *"," * @name size_t"," */","","// \"typedef\"s for the variable-sized types",";[ 'bool', 'byte', 'char', 'uchar', 'short', 'ushort', 'int', 'uint', 'long'",", 'ulong', 'longlong', 'ulonglong', 'size_t' ].forEach(function (name) {","  var unsigned = name === 'bool'","              || name === 'byte'","              || name === 'size_t'","              || name[0] === 'u'","  var size = exports.sizeof[name]","  assert(size >= 1 && size <= 8)","  var typeName = 'int' + (size * 8)","  if (unsigned) {","    typeName = 'u' + typeName","  }","  var type = exports.types[typeName]","  assert(type)","  exports.types[name] = Object.create(type)","})","","// set the \"alignment\" property on the built-in types","Object.keys(exports.alignof).forEach(function (name) {","  if (name === 'pointer') return","  exports.types[name].alignment = exports.alignof[name]","  assert(exports.types[name].alignment > 0)","})","","// make the `bool` type work with JS true/false values","exports.types.bool.get = (function (_get) {","  return function get (buf, offset) {","    return _get(buf, offset) ? true : false","  }","})(exports.types.bool.get)","exports.types.bool.set = (function (_set) {","  return function set (buf, offset, val) {","    if (typeof val !== 'number') {","      val = val ? 1 : 0","    }","    return _set(buf, offset, val)","  }","})(exports.types.bool.set)","","/*!"," * Set the `name` property of the types. Used for debugging..."," */","","Object.keys(exports.types).forEach(function (name) {","  exports.types[name].name = name","})","","/*!"," * This `char *` type is used by \"allocCString()\" above."," */","","var charPtrType = exports.refType(exports.types.char)","","/*!"," * Set the `type` property of the `NULL` pointer Buffer object."," */","","exports.NULL.type = exports.types.void","","/**"," * `NULL_POINTER` is a pointer-sized `Buffer` instance pointing to `NULL`."," * Conceptually, it's equivalent to the following C code:"," *"," * ``` c"," * char *null_pointer;"," * null_pointer = NULL;"," * ```"," *"," * @type Buffer"," */","","exports.NULL_POINTER = exports.ref(exports.NULL)","","/**"," * All these '...' comment blocks below are for the documentation generator."," *"," * @section buffer"," */","","Buffer.prototype.address = function address () {","  return exports.address(this, 0)","}","","/**"," * ..."," */","","Buffer.prototype.hexAddress = function hexAddress () {","  return exports.hexAddress(this, 0)","}","","/**"," * ..."," */","","Buffer.prototype.isNull = function isNull () {","  return exports.isNull(this, 0)","}","","/**"," * ..."," */","","Buffer.prototype.ref = function ref () {","  return exports.ref(this)","}","","/**"," * ..."," */","","Buffer.prototype.deref = function deref () {","  return exports.deref(this)","}","","/**"," * ..."," */","","Buffer.prototype.readObject = function readObject (offset) {","  return exports.readObject(this, offset)","}","","/**"," * ..."," */","","Buffer.prototype.writeObject = function writeObject (obj, offset) {","  return exports.writeObject(this, offset, obj)","}","","/**"," * ..."," */","","Buffer.prototype.readPointer = function readPointer (offset, size) {","  return exports.readPointer(this, offset, size)","}","","/**"," * ..."," */","","Buffer.prototype.writePointer = function writePointer (ptr, offset) {","  return exports.writePointer(this, offset, ptr)","}","","/**"," * ..."," */","","Buffer.prototype.readCString = function readCString (offset) {","  return exports.readCString(this, offset)","}","","/**"," * ..."," */","","Buffer.prototype.writeCString = function writeCString (string, offset, encoding) {","  return exports.writeCString(this, offset, string, encoding)","}","","/**"," * ..."," */","","Buffer.prototype.readInt64BE = function readInt64BE (offset) {","  return exports.readInt64BE(this, offset)","}","","/**"," * ..."," */","","Buffer.prototype.writeInt64BE = function writeInt64BE (val, offset) {","  return exports.writeInt64BE(this, offset, val)","}","","/**"," * ..."," */","","Buffer.prototype.readUInt64BE = function readUInt64BE (offset) {","  return exports.readUInt64BE(this, offset)","}","","/**"," * ..."," */","","Buffer.prototype.writeUInt64BE = function writeUInt64BE (val, offset) {","  return exports.writeUInt64BE(this, offset, val)","}","","/**"," * ..."," */","","Buffer.prototype.readInt64LE = function readInt64LE (offset) {","  return exports.readInt64LE(this, offset)","}","","/**"," * ..."," */","","Buffer.prototype.writeInt64LE = function writeInt64LE (val, offset) {","  return exports.writeInt64LE(this, offset, val)","}","","/**"," * ..."," */","","Buffer.prototype.readUInt64LE = function readUInt64LE (offset) {","  return exports.readUInt64LE(this, offset)","}","","/**"," * ..."," */","","Buffer.prototype.writeUInt64LE = function writeUInt64LE (val, offset) {","  return exports.writeUInt64LE(this, offset, val)","}","","/**"," * ..."," */","","Buffer.prototype.reinterpret = function reinterpret (size, offset) {","  return exports.reinterpret(this, size, offset)","}","","/**"," * ..."," */","","Buffer.prototype.reinterpretUntilZeros = function reinterpretUntilZeros (size, offset) {","  return exports.reinterpretUntilZeros(this, size, offset)","}","","/**"," * `ref` overwrites the default `Buffer#inspect()` function to include the"," * hex-encoded memory address of the Buffer instance when invoked."," *"," * This is simply a nice-to-have."," *"," * **Before**:"," *"," * ``` js"," * console.log(new Buffer('ref'));"," * <Buffer 72 65 66>"," * ```"," *"," * **After**:"," *"," * ``` js"," * console.log(new Buffer('ref'));"," * <Buffer@0x103015490 72 65 66>"," * ```"," */","","Buffer.prototype.inspect = overwriteInspect(Buffer.prototype.inspect)","","// does SlowBuffer inherit from Buffer? (node >= v0.7.9)","if (!(exports.NULL instanceof Buffer)) {","  debug('extending SlowBuffer\\'s prototype since it doesn\\'t inherit from Buffer.prototype')","","  /*!","   * SlowBuffer convenience methods.","   */","","  var SlowBuffer = require('buffer').SlowBuffer","","  SlowBuffer.prototype.address = Buffer.prototype.address","  SlowBuffer.prototype.hexAddress = Buffer.prototype.hexAddress","  SlowBuffer.prototype.isNull = Buffer.prototype.isNull","  SlowBuffer.prototype.ref = Buffer.prototype.ref","  SlowBuffer.prototype.deref = Buffer.prototype.deref","  SlowBuffer.prototype.readObject = Buffer.prototype.readObject","  SlowBuffer.prototype.writeObject = Buffer.prototype.writeObject","  SlowBuffer.prototype.readPointer = Buffer.prototype.readPointer","  SlowBuffer.prototype.writePointer = Buffer.prototype.writePointer","  SlowBuffer.prototype.readCString = Buffer.prototype.readCString","  SlowBuffer.prototype.writeCString = Buffer.prototype.writeCString","  SlowBuffer.prototype.reinterpret = Buffer.prototype.reinterpret","  SlowBuffer.prototype.reinterpretUntilZeros = Buffer.prototype.reinterpretUntilZeros","  SlowBuffer.prototype.readInt64BE = Buffer.prototype.readInt64BE","  SlowBuffer.prototype.writeInt64BE = Buffer.prototype.writeInt64BE","  SlowBuffer.prototype.readUInt64BE = Buffer.prototype.readUInt64BE","  SlowBuffer.prototype.writeUInt64BE = Buffer.prototype.writeUInt64BE","  SlowBuffer.prototype.readInt64LE = Buffer.prototype.readInt64LE","  SlowBuffer.prototype.writeInt64LE = Buffer.prototype.writeInt64LE","  SlowBuffer.prototype.readUInt64LE = Buffer.prototype.readUInt64LE","  SlowBuffer.prototype.writeUInt64LE = Buffer.prototype.writeUInt64LE","  SlowBuffer.prototype.inspect = overwriteInspect(SlowBuffer.prototype.inspect)","}","","function overwriteInspect (inspect) {","  if (inspect.name === 'refinspect') {","    return inspect","  } else {","    return function refinspect () {","      var v = inspect.apply(this, arguments)","      return v.replace('Buffer', 'Buffer@0x' + this.hexAddress())","    }","  }","}",""],"l":{"2":1,"3":1,"5":1,"304":1,"305":2,"306":2,"307":2,"308":2,"309":2,"316":2,"327":1,"328":0,"329":0,"330":0,"332":0,"333":0,"335":0,"336":0,"338":0,"365":1,"366":5,"367":5,"368":0,"369":0,"372":0,"373":0,"375":0,"376":0,"377":0,"379":0,"380":0,"381":0,"382":0,"385":0,"386":0,"387":0,"388":0,"390":0,"391":0,"396":5,"397":0,"399":5,"410":1,"411":1,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"419":0,"420":0,"423":1,"439":1,"440":0,"441":0,"443":0,"444":0,"446":0,"448":0,"449":0,"450":0,"452":0,"455":0,"456":0,"457":0,"458":0,"475":1,"476":1,"477":1,"479":1,"480":1,"482":0,"484":1,"485":1,"486":1,"487":0,"489":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":0,"515":1,"517":1,"518":1,"519":1,"520":1,"521":1,"523":1,"543":1,"544":0,"545":0,"547":0,"548":0,"549":0,"550":0,"551":0,"567":1,"568":0,"569":0,"570":0,"571":0,"573":0,"574":0,"576":0,"577":0,"578":0,"581":1,"582":1,"583":1,"584":1,"586":1,"587":1,"588":1,"590":1,"591":0,"592":0,"594":0,"596":1,"597":0,"598":0,"600":0,"602":1,"603":0,"604":0,"605":0,"608":1,"609":0,"610":0,"611":0,"630":1,"631":1,"632":1,"633":1,"658":1,"659":0,"660":0,"672":1,"673":1,"674":1,"676":1,"690":1,"709":1,"710":0,"711":0,"712":0,"726":1,"745":1,"746":1,"747":1,"748":1,"763":1,"778":1,"779":0,"780":0,"781":0,"782":0,"797":1,"822":1,"823":0,"824":0,"825":0,"826":0,"831":1,"839":1,"843":0,"844":0,"847":0,"855":1,"859":0,"862":0,"863":0,"865":0,"873":1,"877":0,"880":0,"881":0,"883":0,"891":1,"895":0,"898":0,"906":1,"910":0,"913":0,"921":1,"925":0,"928":0,"936":1,"940":0,"943":0,"951":1,"955":0,"958":0,"966":1,"970":0,"973":0,"981":1,"985":0,"988":0,"996":1,"1000":0,"1003":0,"1012":1,"1016":0,"1019":0,"1032":1,"1037":0,"1038":0,"1039":0,"1041":0,"1044":0,"1045":0,"1046":0,"1049":0,"1051":0,"1056":1,"1057":1,"1061":0,"1062":0,"1063":0,"1065":0,"1152":1,"1154":13,"1158":13,"1159":13,"1160":13,"1161":13,"1162":8,"1164":13,"1165":13,"1166":13,"1170":1,"1171":24,"1172":23,"1173":23,"1177":1,"1178":1,"1179":0,"1182":1,"1183":1,"1184":0,"1185":0,"1187":0,"1195":1,"1196":26,"1203":1,"1209":1,"1223":1,"1231":1,"1232":0,"1239":1,"1240":0,"1247":1,"1248":0,"1255":1,"1256":0,"1263":1,"1264":0,"1271":1,"1272":0,"1279":1,"1280":0,"1287":1,"1288":0,"1295":1,"1296":0,"1303":1,"1304":0,"1311":1,"1312":0,"1319":1,"1320":0,"1327":1,"1328":0,"1335":1,"1336":0,"1343":1,"1344":0,"1351":1,"1352":0,"1359":1,"1360":0,"1367":1,"1368":0,"1375":1,"1376":0,"1383":1,"1384":0,"1391":1,"1392":0,"1416":1,"1419":1,"1420":0,"1426":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1452":1,"1453":1,"1454":0,"1456":1,"1457":0,"1458":0}}}